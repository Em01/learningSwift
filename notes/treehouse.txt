  VARIABLES:
  * var declares a variable
  * can be updated on the fly
  * mutable
  * Once you have assigned a value you the variable you cannot change the data type of it.

  CONSTANTS
  * defined by let
  * immutable - locked in value
  * use constants unless you know that the value needs to change

  STRINGS:
  * concatenation is done same as JS
  * interpolation: \(variable) -> "hello, \(name)" - allows you to mix in other types

  Numbers:
  * Integer for a whole number
  * Fractional numbers can be represented by either Double or Float.
  * Double is up to 15 digits
  * Float is up to 6 digits
  * Suggested to use Double unless you know you need to use float.
  * The different types has to do with the size of the number and how they are stored in memory

  Booleans:
  * Binary values represented by True/False


  Type Safety:
  * Swift is a type safe language - encouraging you to be clear about the types of the values which you work with
  e.g- If a variable expects a string you cannot then pass it an Int by mistake
  * Swift is a statically types language
  * With static language the compiler can perform checks for you and ensure that you are not making any
  mistakes through type checking.
  * Instead of relying on the compiler we can explicitly declare the type that the constant or variable will hold.
  e.g - let bestPlayer: String = "myString"
  * If you do not declare a type then Swift will use type inference to automatically deduce the type via the compiler
  * When the compiler infers the type for us the type annotation is implicit
  * Declaring types explicitly allows for more readability
